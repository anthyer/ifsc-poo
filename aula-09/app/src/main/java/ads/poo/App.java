/*
 * This source file was generated by the Gradle 'init' task
 */
package ads.poo;

import com.sun.nio.sctp.PeerAddressChangeNotification;

import java.util.ArrayList;

public class App {
    public static void main(String[] args) {
        Pessoa erik = new Pessoa("Erik", "erik@gmail.com");
        Pessoa bernardo = new Pessoa("Bernardo", "bernardo@yahoo.com");
        ArrayList<String> lista = new ArrayList<>();
        ArrayList<Pessoa> agenda = new ArrayList<>();

        lista.add("POO");
        lista.add("Front End");
        lista.add("Batata");
        lista.add("Comi pizza hoje");
        agenda.add(erik);
        agenda.add(bernardo);
        agenda.add(new Pessoa("Mello", "mello@outlook.com"));
        agenda.add(new Pessoa("John", "john@frusciante.com"));

        System.out.println(erik);
        System.out.println(bernardo);
        System.out.println(lista);
        System.out.println(agenda);

        for (int i = 0; i < lista.size(); i++) {
            System.out.println(lista.get(i));
        }

        for (int i = 0; i < agenda.size(); i++) {
            System.out.println(agenda.get(i));
        }

        for (String elemento : lista) {
            System.out.println(elemento);
        }

        for (Pessoa elemento : agenda) {
            System.out.println(elemento);
        }

        // Expressão lambda
        lista.forEach(elemento->{
            System.out.println(elemento);
        });

        agenda.forEach(elemento-> System.out.println(elemento));

        // Method reference
        lista.forEach(System.out::println);

        agenda.forEach(System.out::println);

        lista.removeIf(elemento->elemento.equals("POO"));

        lista.forEach(System.out::println);

        lista.removeIf(elemento->elemento.equals("Batata"));

        lista.forEach(System.out::println);

        agenda.removeIf(elemento->elemento.equals(erik));

        agenda.forEach(System.out::println);

        agenda.removeIf(elemento->elemento.getNome().equals("Bernardo"));

        agenda.forEach(System.out::println);

        Pessoa p = agenda.stream()
                .filter(elemento->elemento.getNome().equals("Mello"))
                .findFirst()
                .orElse(null);

        // Talvez retorne exceção. Melhor fazer if para garantir que p não é referência para null
        System.out.println(p);

        Pessoa q = agenda.stream()
                .filter(elemento->elemento.getNome().equals("Jeremy"))
                .findFirst()
                .orElse(null);

        if (q != null) {
            String n = q.getNome();
            System.out.println(n);
        } else {
            System.out.println("Não encontrado!");
        }


    }
}
